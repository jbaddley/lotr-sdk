{"code":"import { Characters } from \"../characters/index\";\nimport { BaseAPI } from \"../base\";\nexport class Movies extends BaseAPI {\n    async getAll() {\n        const { docs } = await this.get(\"movie\");\n        return docs;\n    }\n    async getById(MovieId) {\n        const { docs = [] } = await this.get(`movie/${MovieId}`);\n        return docs[0];\n    }\n    async getQuotes(MovieId) {\n        const CharAPI = new Characters(this.config);\n        const { docs } = await this.get(`movie/${MovieId}/quote`);\n        const characters = await CharAPI.getAll();\n        return docs.map((quote) => ({\n            ...quote,\n            characterData: characters.find(({ _id }) => _id === quote.character),\n        }));\n    }\n}\n","dts":{"name":"/Users/jasonbaddley.getweave/code/lotr-sdk/movies/index.d.ts","writeByteOrderMark":false,"text":"import { BaseAPI } from \"../base\";\nimport { Movie } from \"../types/index\";\nexport declare class Movies extends BaseAPI {\n    getAll(): Promise<Movie[]>;\n    getById(MovieId: string): Promise<Movie>;\n    getQuotes(MovieId: string): Promise<{\n        characterData: import(\"../types/index\").Character;\n        _id: string;\n        dialog: string;\n        movie: string;\n        character: string;\n        id: string;\n    }[]>;\n}\n"}}
