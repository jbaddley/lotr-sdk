{"code":"import { BaseAPI } from \"../base\";\nexport class Characters extends BaseAPI {\n    async getAll() {\n        const { docs } = await this.get(\"character\");\n        return docs;\n    }\n    async getById(characterId) {\n        const { docs = [] } = await this.get(`character/${characterId}`);\n        return docs[0];\n    }\n    async getQuotes(characterId) {\n        const { docs } = await this.get(`character/${characterId}/quote`);\n        const characters = await this.getAll();\n        return docs.map((quote) => ({\n            ...quote,\n            characterData: characters.find(({ _id }) => _id === quote.character),\n        }));\n    }\n}\n","dts":{"name":"/Users/jasonbaddley.getweave/code/lotr-sdk/characters/index.d.ts","writeByteOrderMark":false,"text":"import { Character } from \"../types/index\";\nimport { BaseAPI } from \"../base\";\nexport declare class Characters extends BaseAPI {\n    getAll(): Promise<Character[]>;\n    getById(characterId: string): Promise<Character>;\n    getQuotes(characterId: string): Promise<{\n        characterData: Character;\n        _id: string;\n        dialog: string;\n        movie: string;\n        character: string;\n        id: string;\n    }[]>;\n}\n"}}
